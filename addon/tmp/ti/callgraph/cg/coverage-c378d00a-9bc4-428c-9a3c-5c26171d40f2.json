{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1403162892,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"lambda","params":"(java.util.Map,java.lang.String)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-281821150,"classId":1598536595,"package":"io.harness.data.structure","class":"UUIDGenerator","method":"convertToBase64String","params":"(java.util.UUID)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-687025923,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"skipType","params":"(io.harness.pms.contracts.steps.SkipType)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1696335670,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"adjacencyMap","params":"(java.util.Map)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1152387485,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"build","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-863879447,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"name","params":"(java.lang.String)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1329911562,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getStartTs","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":311234306,"classId":1442608053,"package":"io.harness.skip.skipper","class":"VertexSkipper","method":"removeVertex","params":"(io.harness.beans.internal.OrchestrationAdjacencyListInternal,java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1660176365,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"","params":"(java.lang.String,java.util.List,java.util.List,java.util.List)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":149110321,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getEndTs","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":651838040,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"status","params":"(io.harness.pms.contracts.execution.Status)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-728671363,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"getPrevIds","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-12143440,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":635184491,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"equals","params":"(java.lang.Object)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-919507894,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":879260948,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"getAdjacencyMap","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-864110631,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"uuid","params":"(java.lang.String)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":1215892580,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"startTs","params":"(java.lang.Long)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":1754755667,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getExecutionInputConfigured","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1357645211,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"getAdjacencyList","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-978594979,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"promoteChildren","params":"(io.harness.beans.EphemeralOrchestrationGraph,io.harness.beans.GraphVertex)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1307252764,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"edges","params":"(java.util.List)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":479610021,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"","params":"(java.lang.String,java.lang.Long,java.lang.Long,io.harness.pms.contracts.execution.Status,java.util.List,io.harness.beans.internal.OrchestrationAdjacencyListInternal)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":186582032,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"getEdges","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":573913086,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"","params":"(io.harness.beans.internal.OrchestrationAdjacencyListInternal)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-140798757,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"build","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":479610021,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"","params":"(java.lang.String,java.lang.Long,java.lang.Long,io.harness.pms.contracts.execution.Status,java.util.List,io.harness.beans.internal.OrchestrationAdjacencyListInternal)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":304805640,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"setParentId","params":"(java.lang.String)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-39968181,"classId":1598536595,"package":"io.harness.data.structure","class":"UUIDGenerator","method":"generateUuid","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1958674301,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"lambda","params":"(java.util.Map,java.lang.String,io.harness.beans.internal.EdgeListInternal,java.lang.String)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1152387485,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"build","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-2115172419,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"skip","params":"(io.harness.beans.EphemeralOrchestrationGraph,io.harness.beans.GraphVertex)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-2115172419,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"skip","params":"(io.harness.beans.EphemeralOrchestrationGraph,io.harness.beans.GraphVertex)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":1732489606,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"","params":"(java.util.Map,java.util.Map)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1357645211,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"getAdjacencyList","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-978594979,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"promoteChildren","params":"(io.harness.beans.EphemeralOrchestrationGraph,io.harness.beans.GraphVertex)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":635184491,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"equals","params":"(java.lang.Object)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":573913086,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"","params":"(io.harness.beans.internal.OrchestrationAdjacencyListInternal)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-39968181,"classId":1598536595,"package":"io.harness.data.structure","class":"UUIDGenerator","method":"generateUuid","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":311234306,"classId":1442608053,"package":"io.harness.skip.skipper","class":"VertexSkipper","method":"removeVertex","params":"(io.harness.beans.internal.OrchestrationAdjacencyListInternal,java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1292361906,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"builder","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":1730935961,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"","params":"(java.lang.String,io.harness.pms.contracts.ambiance.Ambiance,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.time.Duration,java.lang.Long,java.lang.String,io.harness.pms.contracts.execution.Status,io.harness.pms.contracts.execution.failure.FailureInfo,io.harness.pms.data.stepparameters.PmsStepParameters,io.harness.pms.contracts.execution.ExecutionMode,java.util.List,java.util.List,java.util.List,java.util.Map,java.util.List,java.lang.Boolean,java.util.Map,io.harness.pms.contracts.execution.skip.SkipInfo,io.harness.pms.contracts.execution.run.NodeRunInfo,io.harness.pms.contracts.steps.SkipType,java.util.List,io.harness.pms.data.OrchestrationMap,java.util.Map,io.harness.beans.RepresentationStrategy)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":1248266385,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"prevIds","params":"(java.util.List)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-754795681,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"lambda","params":"(io.harness.skip.skipper.impl.SkipNodeSkipper$Session,io.harness.beans.internal.EdgeListInternal,java.util.Map,io.harness.beans.GraphVertex,java.lang.String)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-256826349,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"getRootNodeIds","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-783206817,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"endTs","params":"(java.lang.Long)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":5483922,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"planExecutionId","params":"(java.lang.String)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-919507894,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-12143440,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":879260948,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"getAdjacencyMap","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1957792111,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"traverse","params":"(java.lang.String,java.lang.String,java.lang.String)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-281821150,"classId":1598536595,"package":"io.harness.data.structure","class":"UUIDGenerator","method":"convertToBase64String","params":"(java.util.UUID)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-728671363,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"getPrevIds","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-2122249444,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getUuid","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":651838040,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"status","params":"(io.harness.pms.contracts.execution.Status)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-39968181,"classId":1598536595,"package":"io.harness.data.structure","class":"UUIDGenerator","method":"generateUuid","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1696335670,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"adjacencyMap","params":"(java.util.Map)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1010191880,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"build","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1808802437,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"traverseNextIds","params":"(java.util.List,java.lang.String,java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":1199170080,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"graphVertexMap","params":"(java.util.Map)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-269149850,"classId":720175125,"package":"io.harness.pms.contracts.execution","class":"Status","method":"","params":"(java.lang.String,int,int)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":1622690399,"classId":720175125,"package":"io.harness.pms.contracts.execution","class":"Status","method":"values","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1705483228,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"lambda","params":"(java.lang.String,java.lang.String,java.lang.String)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":1783117837,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"adjacencyList","params":"(io.harness.beans.internal.OrchestrationAdjacencyListInternal)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1623841137,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getLastUpdatedAt","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1329911562,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getStartTs","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1307252764,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"edges","params":"(java.util.List)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":1248266385,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"prevIds","params":"(java.util.List)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":1783117837,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"adjacencyList","params":"(io.harness.beans.internal.OrchestrationAdjacencyListInternal)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":1636892594,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"canEqual","params":"(java.lang.Object)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":186582032,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"getEdges","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":1403107901,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"getNextIds","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-140798757,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"build","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1061703499,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-280773178,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"builder","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1113522167,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"getParentId","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":1403107901,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"getNextIds","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1352807043,"classId":720175125,"package":"io.harness.pms.contracts.execution","class":"Status","method":"","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-915708079,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"nextIds","params":"(java.util.List)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":1636892594,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"canEqual","params":"(java.lang.Object)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1307252764,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"edges","params":"(java.util.List)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-280773178,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"builder","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1061703499,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-753035286,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"getGraphVertexMap","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1705483228,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"lambda","params":"(java.lang.String,java.lang.String,java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-102827426,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"build","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-50114771,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-2106857433,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"rootNodeIds","params":"(java.util.List)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-687025923,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"skipType","params":"(io.harness.pms.contracts.steps.SkipType)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-2122249444,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getUuid","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-863879447,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"name","params":"(java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":149110321,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getEndTs","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1660176365,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"","params":"(java.lang.String,java.util.List,java.util.List,java.util.List)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":651838040,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"status","params":"(io.harness.pms.contracts.execution.Status)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-50114771,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1957792111,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"traverse","params":"(java.lang.String,java.lang.String,java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-12143440,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-281821150,"classId":1598536595,"package":"io.harness.data.structure","class":"UUIDGenerator","method":"convertToBase64String","params":"(java.util.UUID)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1623841137,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getLastUpdatedAt","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":5483922,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"planExecutionId","params":"(java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1329911562,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getStartTs","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1010191880,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"build","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1292361906,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"builder","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-2106857433,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"rootNodeIds","params":"(java.util.List)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":1248266385,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"prevIds","params":"(java.util.List)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":1732489606,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"","params":"(java.util.Map,java.util.Map)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1808802437,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"traverseNextIds","params":"(java.util.List,java.lang.String,java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1705483228,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"lambda","params":"(java.lang.String,java.lang.String,java.lang.String)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-242801847,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"builder","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-687025923,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"skipType","params":"(io.harness.pms.contracts.steps.SkipType)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-783206817,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"endTs","params":"(java.lang.Long)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-568226536,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"lambda","params":"(java.util.Map,io.harness.beans.internal.EdgeListInternal,java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-2122249444,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getUuid","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":144529798,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"parentId","params":"(java.lang.String)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":1730935961,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"","params":"(java.lang.String,io.harness.pms.contracts.ambiance.Ambiance,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.time.Duration,java.lang.Long,java.lang.String,io.harness.pms.contracts.execution.Status,io.harness.pms.contracts.execution.failure.FailureInfo,io.harness.pms.data.stepparameters.PmsStepParameters,io.harness.pms.contracts.execution.ExecutionMode,java.util.List,java.util.List,java.util.List,java.util.Map,java.util.List,java.lang.Boolean,java.util.Map,io.harness.pms.contracts.execution.skip.SkipInfo,io.harness.pms.contracts.execution.run.NodeRunInfo,io.harness.pms.contracts.steps.SkipType,java.util.List,io.harness.pms.data.OrchestrationMap,java.util.Map,io.harness.beans.RepresentationStrategy)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-753035286,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"getGraphVertexMap","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":304805640,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"setParentId","params":"(java.lang.String)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-864110631,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"uuid","params":"(java.lang.String)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":1199170080,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"graphVertexMap","params":"(java.util.Map)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1292361906,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"builder","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1150166301,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"builder","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1150166301,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"builder","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":395897821,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"lambda","params":"(java.util.Map,io.harness.beans.internal.EdgeListInternal,io.harness.beans.GraphVertex,java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":479610021,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"","params":"(java.lang.String,java.lang.Long,java.lang.Long,io.harness.pms.contracts.execution.Status,java.util.List,io.harness.beans.internal.OrchestrationAdjacencyListInternal)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-242801847,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"builder","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-978594979,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"promoteChildren","params":"(io.harness.beans.EphemeralOrchestrationGraph,io.harness.beans.GraphVertex)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1152387485,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"build","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-754795681,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"lambda","params":"(io.harness.skip.skipper.impl.SkipNodeSkipper$Session,io.harness.beans.internal.EdgeListInternal,java.util.Map,io.harness.beans.GraphVertex,java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":1754755667,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getExecutionInputConfigured","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":5483922,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"planExecutionId","params":"(java.lang.String)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":1730935961,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"","params":"(java.lang.String,io.harness.pms.contracts.ambiance.Ambiance,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.time.Duration,java.lang.Long,java.lang.String,io.harness.pms.contracts.execution.Status,io.harness.pms.contracts.execution.failure.FailureInfo,io.harness.pms.data.stepparameters.PmsStepParameters,io.harness.pms.contracts.execution.ExecutionMode,java.util.List,java.util.List,java.util.List,java.util.Map,java.util.List,java.lang.Boolean,java.util.Map,io.harness.pms.contracts.execution.skip.SkipInfo,io.harness.pms.contracts.execution.run.NodeRunInfo,io.harness.pms.contracts.steps.SkipType,java.util.List,io.harness.pms.data.OrchestrationMap,java.util.Map,io.harness.beans.RepresentationStrategy)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":1199170080,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"graphVertexMap","params":"(java.util.Map)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-140798757,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"build","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-728671363,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"getPrevIds","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-2142432379,"classId":1250019643,"package":"io.harness.pms.contracts.steps","class":"SkipType","method":"values","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":186582032,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"getEdges","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":304805640,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"setParentId","params":"(java.lang.String)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-754795681,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"lambda","params":"(io.harness.skip.skipper.impl.SkipNodeSkipper$Session,io.harness.beans.internal.EdgeListInternal,java.util.Map,io.harness.beans.GraphVertex,java.lang.String)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":1754755667,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getExecutionInputConfigured","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":1215892580,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"startTs","params":"(java.lang.Long)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":149110321,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getEndTs","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-50114771,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-906298125,"classId":1552927667,"package":"io.harness.beans","class":"RepresentationStrategy","method":"","params":"(java.lang.String,int)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1010191880,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"build","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-2115172419,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"skip","params":"(io.harness.beans.EphemeralOrchestrationGraph,io.harness.beans.GraphVertex)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1623841137,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"getLastUpdatedAt","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-919507894,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":1215892580,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"startTs","params":"(java.lang.Long)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1808802437,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"traverseNextIds","params":"(java.util.List,java.lang.String,java.lang.String)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-242801847,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"builder","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":573913086,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"","params":"(io.harness.beans.internal.OrchestrationAdjacencyListInternal)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1957792111,"classId":532410660,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipper","method":"traverse","params":"(java.lang.String,java.lang.String,java.lang.String)"}}
{"test":{"id":724830717,"classId":-1497153642,"package":"io.harness","class":"CategoryTest"},"source":{"id":1794565376,"classId":-1185934349,"package":"io.harness.rule","class":"RepeatRule","method":"getRepetition","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-822962525,"classId":1250019643,"package":"io.harness.pms.contracts.steps","class":"SkipType","method":"","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1357645211,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"getAdjacencyList","params":"()"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":260694668,"classId":1250019643,"package":"io.harness.pms.contracts.steps","class":"SkipType","method":"","params":"(java.lang.String,int,int)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1150166301,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"builder","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-863879447,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"name","params":"(java.lang.String)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-1113522167,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"getParentId","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-864110631,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"uuid","params":"(java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":879260948,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"getAdjacencyMap","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":311234306,"classId":1442608053,"package":"io.harness.skip.skipper","class":"VertexSkipper","method":"removeVertex","params":"(io.harness.beans.internal.OrchestrationAdjacencyListInternal,java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":635184491,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"equals","params":"(java.lang.Object)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-102827426,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"build","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-783206817,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"endTs","params":"(java.lang.Long)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":1783117837,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"adjacencyList","params":"(io.harness.beans.internal.OrchestrationAdjacencyListInternal)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-915708079,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"nextIds","params":"(java.util.List)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":1636892594,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"canEqual","params":"(java.lang.Object)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":1732489606,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"","params":"(java.util.Map,java.util.Map)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":144529798,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"parentId","params":"(java.lang.String)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":-915708079,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"nextIds","params":"(java.util.List)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":1403107901,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"getNextIds","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-102827426,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"build","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-753035286,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"getGraphVertexMap","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-2106857433,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"rootNodeIds","params":"(java.util.List)"}}
{"test":{"id":724830717,"classId":-1497153642,"package":"io.harness","class":"CategoryTest"},"source":{"id":1867172510,"classId":991009712,"package":"io.harness.data.presentation","class":"ByteCountUtils","method":"humanReadableBin","params":"(long)"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1113522167,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"getParentId","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1696335670,"classId":1153474274,"package":"io.harness.beans.internal","class":"OrchestrationAdjacencyListInternal","method":"adjacencyMap","params":"(java.util.Map)"}}
{"test":{"id":-256713877,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWithPrevAndNextPresent","params":"()"},"source":{"id":144529798,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"parentId","params":"(java.lang.String)"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-1061703499,"classId":1011278669,"package":"io.harness.beans","class":"EphemeralOrchestrationGraph","method":"","params":"()"}}
{"test":{"id":-1902422027,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldPromoteChildrenWhenCurrentHasParentAndNext","params":"()"},"source":{"id":-280773178,"classId":2022867397,"package":"io.harness.beans","class":"GraphVertex","method":"builder","params":"()"}}
{"test":{"id":-114574298,"classId":-221490442,"package":"io.harness.skip.skipper.impl","class":"SkipNodeSkipperTest","method":"shouldRemoveSubgraphWhenCurrentIsRootNode","params":"()"},"source":{"id":-1660176365,"classId":2060838728,"package":"io.harness.beans.internal","class":"EdgeListInternal","method":"","params":"(java.lang.String,java.util.List,java.util.List,java.util.List)"}}
